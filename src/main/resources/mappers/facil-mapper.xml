<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.harang.mapper.facil-mapper">
  
  	<select id="ReserPgListAll" resultType="PgMember">
  		SELECT m.pgm_num, m.pg_num, m.m_id, m.pgm_regdate, m.pgm_timecode, p.pg_type, p.pg_name, m.pgm_date, p.pg_point
  		FROM tbl_pg_member m, tbl_playground p WHERE m.pg_num = p.pg_num
  		ORDER BY m.pgm_date ASC
  	</select>
  	
  	<select id="ReserSrListAll" resultType="SrMember">
  		SELECT m.srm_num, m.sr_num, m.m_id, m.srm_regdate, m.srm_timecode, s.sr_type, s.sr_name, m.srm_date, s.sr_point
  		FROM tbl_sr_member m, tbl_studyroom s WHERE m.sr_num = s.sr_num
  		ORDER BY m.srm_date ASC
  	</select>

  	<select id="ReserPgList" resultType="PgMember">
  		SELECT m.pgm_num, m.pg_num, m.m_id, m.pgm_regdate, m.pgm_timecode, p.pg_type, p.pg_name, m.pgm_date, p.pg_point
  		FROM tbl_pg_member m, tbl_playground p WHERE m.pg_num = p.pg_num
  		AND m.m_id= #{m_id} ORDER BY m.pgm_date ASC
  	</select>
  	
  	<select id="ReserSrList" resultType="SrMember">
  		SELECT m.srm_num, m.sr_num, m.m_id, m.srm_regdate, m.srm_timecode, s.sr_type, s.sr_name, m.srm_date, s.sr_point
  		FROM tbl_sr_member m, tbl_studyroom s WHERE m.sr_num = s.sr_num
  		AND m.m_id= #{m_id} ORDER BY m.srm_date ASC
  	</select>
  	
  	<delete id="ReserPgCancel" >
  		DELETE FROM tbl_pg_member WHERE pgm_num=#{pgm_num}
  	</delete>
  	
  	<delete id="ReserSrCancel" >
  		DELETE FROM tbl_sr_member WHERE srm_num=#{srm_num}
  	</delete>
  	
	<select id="schedulePgLoad" resultType="PgMember">
		SELECT m.pgm_issue, m.pgm_num, m.pg_num, m.m_id, m.pgm_regdate, m.pgm_timecode, p.pg_type, p.pg_name, m.pgm_date, p.pg_point
				FROM tbl_pg_member m, tbl_playground p WHERE m.pg_num = p.pg_num
				AND pgm_issue !='학생예약' ORDER BY m.pgm_date ASC
	</select>
	
	<select id="scheduleSrLoad" resultType="SrMember">
		SELECT m.srm_issue, m.srm_num, m.sr_num, m.m_id, m.srm_regdate, m.srm_timecode, s.sr_type, s.sr_name, m.srm_date, s.sr_point
				FROM tbl_sr_member m, tbl_studyroom s WHERE m.sr_num = s.sr_num
				AND srm_issue !='학생예약' ORDER BY m.srm_date ASC
	</select>
	
	<select id="schPgTypeAjax" resultType="Playground">
		SELECT * FROM tbl_playground GROUP BY pg_type
	</select>
	
	<select id="schSrTypeAjax" resultType="Studyroom">
		SELECT * FROM tbl_studyroom GROUP BY sr_type
	</select>
	
	<select id="scheduleToPg" resultType="Schedure">
		SELECT * FROM tbl_schedule WHERE s_location LIKE '%운동장%'
	</select>
	
	<select id="scheduleToSr" resultType="Schedure">
		SELECT * FROM tbl_schedule WHERE s_location LIKE '%스터디룸%'
	</select>
	
	<select id="schPgNameAjax" resultType="Playground">
		SELECT pg_name, pg_num, pg_content, pg_point FROM  tbl_playground WHERE pg_type=#{pg_type}
	</select>
	
	<!-- 파라미터값은 동일하기때문에 생략. -->
	<select id="schSrNameAjax" resultType="Studyroom">
		SELECT sr_name, sr_num, sr_content, sr_point FROM  tbl_studyroom WHERE sr_type=#{sr_type}
	</select>
	
	<select id="schPgNumAjax" resultType="Playground">
		SELECT pg_name, pg_num, pg_content, pg_point FROM  tbl_playground
		WHERE pg_type=#{pg_type} AND pg_name=#{pg_name}
	</select>
	
	<select id="schSrNumAjax" resultType="Studyroom">
		SELECT sr_name, sr_num, sr_content, sr_point FROM  tbl_studyroom
		WHERE sr_type=#{sr_type} AND sr_name=#{sr_name}
	</select>
	
	<select id="loadPgList" resultType="Playground">
		SELECT * FROM tbl_playground
	</select>
	
	<select id="loadSrList" resultType="Studyroom">
		SELECT * FROM tbl_studyroom
	</select>
	
	<update id="modifyPg" parameterType="Playground">
		UPDATE tbl_playground  
		SET pg_type=#{pg_type}, pg_name=#{pg_name}, pg_content=#{pg_content}
		WHERE pg_num=#{pg_num}
	</update>
	
	<update id="modifySr" parameterType="Studyroom">
		UPDATE tbl_studyroom  
		SET sr_type=#{sr_type}, sr_name=#{sr_name}, sr_content=#{sr_content}
		WHERE sr_num=#{sr_num}
	</update>
	
	<insert id="addFacilPg" parameterType="Playground">
		INSERT INTO tbl_playground (pg_type, pg_name, pg_content) 
		VALUES (#{pg_type},#{pg_name},#{pg_content})
	</insert>
	
	<insert id="addFacilSr" parameterType="Studyroom">
		INSERT INTO tbl_studyroom (pg_type, pg_name, pg_content) 
		VALUES (#{sr_type},#{sr_name},#{sr_content})
	</insert>
	
	<delete id="delFacilPg">
		DELETE FROM tbl_playground WHERE pg_num = #{pg_num}
	</delete>
	
	<delete id="delFacilSr">
		DELETE FROM tbl_studyroom WHERE sr_num = #{sr_num}
	</delete>
	
	
	
	<insert id="aFacilPgAdd" parameterType="PgMember">
		INSERT INTO tbl_pg_member (pgm_date, pgm_timecode, m_id, pg_num, pgm_issue)
		VALUES (#{pgm_date}, #{pgm_timecode}, #{m_id}, #{pg_num}, #{pgm_issue})
	</insert>
	
	<insert id="aFacilSrAdd" parameterType="SrMember">
		INSERT INTO tbl_sr_member (srm_date, srm_timecode, m_id, sr_num, srm_issue)
		VALUES (#{srm_date}, #{srm_timecode}, #{m_id}, #{sr_num}, #{srm_issue})
	</insert>
	
	
	
	
	<select id="aticketList" parameterType="SearchCriteria" resultType="FoodMember">
		select f.f_title, f.f_selldate, f.f_point, count(fm.f_num) as fm_sellcount 
		from tbl_food_member fm, tbl_food f 
		where fm.f_num=f.f_num and fm.fm_isuse != 'return' 
		<include refid="search"></include>
		group by fm.f_num 
		order by f.f_selldate desc 
		limit #{pageStart}, #{perPageNum} 
	</select>
	
	<sql id="search">
		<if test="keyfield != null">
			<if test="keyfield == 'f_selldate'.toString()">
				and f.f_selldate like concat('%', #{keyword}, '%') 
			</if>		
			<if test="keyfield == 'f_title'.toString()">
				and f.f_title like concat('%', #{keyword}, '%') 
			</if>		
			<if test="keyfield == 'f_point'.toString()">
				and f.f_point like concat('%', #{keyword}, '%') 
			</if>		
			<if test="keyfield == 'fm_sellcount'.toString()">
				and fm.fm_sellcount like concat('%', #{keyword}, '%') 
			</if>		
		</if>
	</sql>	
	
	<select id="aticketCountPaging" resultType="int">
		select count(distinct f.f_num) 
		from tbl_food_member fm, tbl_food f 
		where fm.f_num=f.f_num and fm.fm_isuse != 'return'; 
	</select>
  
  </mapper>